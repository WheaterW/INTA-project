{
    "From": " Cisco IOS Configuration Fundamentals Command Reference",
    "PageTitle": "show monitor event-trace",
    "FuncDef": [
        "To display event trace messages for Cisco IOS software subsystem components, use the **show monitor event-trace** command in privileged EXEC mode. "
    ],
    "CLIs": [
        "show monitor event-trace [ all-traces ] [ <component> { all | back <hour:minute> | clock <hour:minute> | from-boot <seconds> | latest | parameters } ]"
    ],
    "ParentView": [
        null
    ],
    "ParaDef": [
        {
            "Parameters": " **all-traces** ",
            "Info": " (Optional) Displays all event trace messages in memory to the console. "
        },
        {
            "Parameters": " *component* ",
            "Info": " (Optional) Name of the Cisco IOS software subsystem component that is the object of the event trace. To get a list of components that support event tracing in this release, use the **monitor event-trace ?** command. "
        },
        {
            "Parameters": " **all** ",
            "Info": " Displays all event trace messages currently in memory for the specified component. "
        },
        {
            "Parameters": " **back** *hour:minute* ",
            "Info": " Specifies how far back from the current time you want to view messages. For example, you can gather messages from the last 30 minutes. The time argument is specified in hours and minutes format (hh:mm). "
        },
        {
            "Parameters": " **clock** *hour:minute* ",
            "Info": " Displays event trace messages starting from a specific clock time in hours and minutes format (hh:mm). "
        },
        {
            "Parameters": " **from-boot** *seconds* ",
            "Info": " Displays event trace messages starting from a specified number of seconds after booting (uptime). To display the uptime, in seconds, enter the **show monitor event-trace** *component* **from-boot ?** command. "
        },
        {
            "Parameters": " **latest** ",
            "Info": " Displays only the event trace messages since the last **show monitor event-trace** command was entered. "
        },
        {
            "Parameters": " **parameters** ",
            "Info": " Displays the trace parameters. The only parameter displayed is the size (number of trace messages) of the trace file. "
        }
    ],
    "Examples": [
        [
            "IPC Component Example",
            "The following is sample output from the show monitor event-trace <component> command for the interprocess communication (IPC) component. Notice that each trace message is numbered and is followed by a time stamp (derived from the device uptime). Following the time stamp is the component-specific message data.",
            "```",
            "Router# show monitor event-trace ipc",
            "```",
            "```",
            "```",
            "```",
            "3667: 6840.016:Message type:3 Data=0123456789",
            "```",
            "```",
            "3668: 6840.016:Message type:4 Data=0123456789",
            "```",
            "```",
            "3669: 6841.016:Message type:5 Data=0123456789",
            "```",
            "```",
            "3670: 6841.016:Message type:6 Data=0123456",
            "```",
            "BFD Component for Cisco IOS Release 12.2(18)SXE, 12.0(31)S, and 12.4(4)T",
            "Use the show monitor event-trace bfd all command to display logged messages for important BFD events in the recent past. The following trace messages show BFD session state changes:",
            "```",
            "Router# show monitor event-trace bfd all",
            "```",
            "```",
            "```",
            "```",
            "3d03h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,1 ] , event Session",
            "```",
            "```",
            "create, state Unknown -> Fail",
            "```",
            "```",
            "3d03h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,1 ] , state Fail -> Down",
            "```",
            "```",
            "(from LC)",
            "```",
            "```",
            "3d03h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,1 ] , state Down -> Init",
            "```",
            "```",
            "(from LC)",
            "```",
            "```",
            "3d03h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,1 ] , state Init -> Up",
            "```",
            "```",
            "(from LC)",
            "```",
            "```",
            "3d07h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,2 ] , event Session",
            "```",
            "```",
            "create, state Unknown -> Fail",
            "```",
            "```",
            "3d07h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,2 ] , state Fail -> Down",
            "```",
            "```",
            "(from LC)",
            "```",
            "```",
            "3d07h: EVENT: Session [ 172.16.10.2,172.16.10.1,Fa6/0,2 ] , state Down -> Up",
            "```",
            "```",
            "(from LC)",
            "```",
            "```",
            "```",
            "To display trace information for all components configured for event tracing on the networking device, enter the show monitor event-trace all-traces command. In this example, separate output is provided for each event, and message numbers are interleaved between the events.",
            "```",
            "Router# show monitor event-trace all-traces",
            "```",
            "```",
            "```",
            "```",
            "Test1 event trace:",
            "```",
            "```",
            "3667: 6840.016:Message type:3 Data=0123456789",
            "```",
            "```",
            "3669: 6841.016:Message type:4 Data=0123456789",
            "```",
            "```",
            "3671: 6842.016:Message type:5 Data=0123456789",
            "```",
            "```",
            "3673: 6843.016:Message type:6 Data=0123456789",
            "```",
            "```",
            "```",
            "```",
            "Test2 event trace:",
            "```",
            "```",
            "3668: 6840.016:Message type:3 Data=0123456789",
            "```",
            "```",
            "3670: 6841.016:Message type:4 Data=0123456789",
            "```",
            "```",
            "3672: 6842.016:Message type:5 Data=0123456789",
            "```",
            "```",
            "3674: 6843.016:Message type:6 Data=0123456789",
            "```",
            "SPA Component Example",
            "The following is sample output from the show monitor event-trace <component> latest command for the spa component:",
            "```",
            "Router# show monitor event-trace spa latest",
            "```",
            "```",
            "```",
            "```",
            "00:01:15.364: subslot 2/3: 4xOC3 POS SPA, TSM Event:inserted New state:wait_psm",
            "```",
            "```",
            "_ready",
            "```",
            "```",
            "spa type 0x440",
            "```",
            "```",
            "00:02:02.308: subslot 2/0: not present, TSM Event:empty New state:remove",
            "```",
            "```",
            "spa type 0x0, fail code 0x0(none)",
            "```",
            "```",
            "00:02:02.308: subslot 2/0: not present, TSM Event:remove_complete New state:idle",
            "```",
            "```",
            "00:02:02.308: subslot 2/1: not present, TSM Event:empty New state:remove",
            "```",
            "```",
            "spa type 0x0, fail code 0x0(none)",
            "```",
            "```",
            "00:02:02.308: subslot 2/1: not present, TSM Event:remove_complete New state:idle",
            "```",
            "```",
            "00:02:02.308: subslot 2/2: not present, TSM Event:empty New state:remove",
            "```",
            "```",
            "spa type 0x0, fail code 0x0(none)",
            "```",
            "```",
            "00:02:02.308: subslot 2/2: not present, TSM Event:remove_complete New state:idle",
            "```",
            "```",
            "00:02:02.312: subslot 2/3: not present(plugin 4xOC3 POS SPA), TSM Event:empty New",
            "```",
            "```",
            "state:remove",
            "```",
            "```",
            "spa type 0x0, fail code 0x0(none)",
            "```",
            "```",
            "00:02:02.312: subslot 2/3: not present, TSM Event:remove_complete New state:idle",
            "```",
            "Cisco Express Forwarding Component Examples",
            "If you select Cisco Express Forwarding as the component for which to display event messages, you can use the following additional arguments and keywords: show monitor event-trace cef [ events | interface | ipv6 | ipv4 ] [ all ] .",
            "The following example shows the IPv6 or IPv4 events related to the Cisco Express Forwarding <component>. Each trace message is numbered and is followed by a time stamp (derived from the device uptime). Following the time stamp is the <component>-specific message data.",
            "```",
            "Router# show monitor event-trace cef ipv6 all",
            "```",
            "```",
            "```",
            "```",
            "00:00:24.612: [ Default ] <::>/*'00 New FIB table [ OK ]",
            "```",
            "```",
            "```",
            "```",
            "Router# show monitor event-trace cef ipv4 all",
            "```",
            "```",
            "```",
            "```",
            "00:00:24.244: [ Default ] 127.0.0.81/32'01 FIB insert [ OK ]",
            "```",
            "```",
            "```",
            "In the following example, all event trace messages for the Cisco Express Forwarding <component> are displayed:",
            "```",
            "Router# show monitor event-trace cef events all",
            "```",
            "```",
            "```",
            "```",
            "00:00:18.884: SubSys fib_ios_chain init",
            "```",
            "```",
            "00:00:18.884: Inst unknown -> RP",
            "```",
            "```",
            "00:00:24.584: SubSys fib init",
            "```",
            "```",
            "00:00:24.592: SubSys fib_ios init",
            "```",
            "```",
            "00:00:24.592: SubSys fib_ios_if init",
            "```",
            "```",
            "00:00:24.596: SubSys ipv4fib init",
            "```",
            "```",
            "00:00:24.608: SubSys ipv4fib_ios init",
            "```",
            "```",
            "00:00:24.612: SubSys ipv6fib_ios init",
            "```",
            "```",
            "00:00:24.620: Flag IPv4 CEF enabled set to yes",
            "```",
            "```",
            "00:00:24.620: Flag 0x7BF6B62C set to yes",
            "```",
            "```",
            "00:00:24.620: Flag IPv4 CEF switching enabled set to yes",
            "```",
            "```",
            "00:00:24.624: GState CEF enabled",
            "```",
            "```",
            "00:00:24.628: SubSys ipv4fib_les init",
            "```",
            "```",
            "00:00:24.628: SubSys ipv4fib_pas init",
            "```",
            "```",
            "00:00:24.632: SubSys ipv4fib_util init",
            "```",
            "```",
            "00:00:25.304: Process Background created",
            "```",
            "```",
            "00:00:25.304: Flag IPv4 CEF running set to yes",
            "```",
            "```",
            "00:00:25.304: Process Background event loop enter",
            "```",
            "```",
            "00:00:25.308: Flag IPv4 CEF switching running set to yes",
            "```",
            "```",
            "```",
            "The following example shows Cisco Express Forwarding interface events:",
            "```",
            "Router# show monitor event-trace cef interface all",
            "```",
            "```",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 4) Create new",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 4) SWIDBLnk FastEthernet0/0(4)",
            "```",
            "```",
            "00:00:24.624: Fa0/0 (sw 4) NameSet",
            "```",
            "```",
            "00:00:24.624: <empty> (hw 1) Create new",
            "```",
            "```",
            "00:00:24.624: <empty> (hw 1) HWIDBLnk FastEthernet0/0(1)",
            "```",
            "```",
            "00:00:24.624: Fa0/0 (hw 1) NameSet",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 3) Create new",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 3) SWIDBLnk FastEthernet0/1(3)",
            "```",
            "```",
            "00:00:24.624: Fa0/1 (sw 3) NameSet",
            "```",
            "```",
            "00:00:24.624: <empty> (hw 2) Create new",
            "```",
            "Cisco Express Forwarding Component Examples for Cisco 10000 Series Routers Only",
            "The following example shows the IPv4 events related to the Cisco Express Forwarding <component>. Each trace message is numbered and is followed by a time stamp (derived from the device uptime). Following the time stamp is the <component>-specific message data.",
            "```",
            "Router# show monitor event-trace cef ipv4 all",
            "```",
            "```",
            "```",
            "```",
            "00:00:48.244: [ Default ] 127.0.0.81/32'01 FIB insert [ OK ]",
            "```",
            "```",
            "```",
            "In the following example, all event trace message for the Cisco Express Forwarding <component> are displayed:",
            "```",
            "Router# show monitor event-trace cef events all",
            "```",
            "```",
            "```",
            "```",
            "00:00:18.884: SubSys fib_ios_chain init",
            "```",
            "```",
            "00:00:18.884: Inst unknown -> RP",
            "```",
            "```",
            "00:00:24.584: SubSys fib init",
            "```",
            "```",
            "00:00:24.592: SubSys fib_ios init",
            "```",
            "```",
            "00:00:24.592: SubSys fib_ios_if init",
            "```",
            "```",
            "00:00:24.596: SubSys ipv4fib init",
            "```",
            "```",
            "00:00:24.608: SubSys ipv4fib_ios init",
            "```",
            "```",
            "00:00:24.620: Flag IPv4 CEF enabled set to yes",
            "```",
            "```",
            "00:00:24.620: Flag 0x7BF6B62C set to yes",
            "```",
            "```",
            "00:00:24.620: Flag IPv4 CEF switching enabled set to yes",
            "```",
            "```",
            "00:00:24.624: GState CEF enabled",
            "```",
            "```",
            "00:00:24.628: SubSys ipv4fib_les init",
            "```",
            "```",
            "00:00:24.628: SubSys ipv4fib_pas init",
            "```",
            "```",
            "00:00:24.632: SubSys ipv4fib_util init",
            "```",
            "```",
            "00:00:25.304: Process Background created",
            "```",
            "```",
            "00:00:25.304: Flag IPv4 CEF running set to yes",
            "```",
            "```",
            "00:00:25.304: Process Background event loop enter",
            "```",
            "```",
            "00:00:25.308: Flag IPv4 CEF switching running set to yes",
            "```",
            "```",
            "```",
            "The following examples show Cisco Express Forwarding interface events:",
            "```",
            "Router# show monitor event-trace cef interface all",
            "```",
            "```",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 4) Create new",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 4) SWIDBLnk FastEthernet1/0/0(4)",
            "```",
            "```",
            "00:00:24.624: Fa0/0 (sw 4) NameSet",
            "```",
            "```",
            "00:00:24.624: <empty> (hw 1) Create new",
            "```",
            "```",
            "00:00:24.624: <empty> (hw 1) HWIDBLnk FastEthernet1/0/0(1)",
            "```",
            "```",
            "00:00:24.624: Fa0/0 (hw 1) NameSet",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 3) Create new",
            "```",
            "```",
            "00:00:24.624: <empty> (sw 3) SWIDBLnk FastEthernet1/1/0(3)",
            "```",
            "```",
            "00:00:24.624: Fa0/1 (sw 3) NameSet",
            "```",
            "```",
            "00:00:24.624: <empty> (hw 2) Create new",
            "```",
            "CFD Component for Cisco IOS Release 12.4(9)T",
            "To troubleshoot errors in an encryption datapath, enter the show monitor event-trace cfd all command. In this example, events are shown separately, each beginning with a time stamp, followed by data from the error trace buffer. Cisco Technical Assistence Center (TAC) engineers can use this information to diagnose the cause of the errors.",
            "! [ ] (/c/dam/en/us/td/i/templates/note.gif)",
            "---",
            "Note ! [ ] (/c/dam/en/us/td/i/templates/blank.gif)If no packets have been dropped, this command does not display any output.",
            "---",
            "```",
            "Router# show monitor event-trace cfd all",
            "```",
            "```",
            "```",
            "```",
            "00:00:42.452: 450000B4 00060000 FF33B306 02020203 02020204 32040000 F672999C",
            "00000001 7A7690C2 A0A4F8BC E732985C D6FFDCC8 00000001 C0902BD0",
            "A99127AE 8EAA22D4",
            "00:00:44.452: 450000B4 00070000 FF33B305 02020203 02020204 32040000 F672999C",
            "00000002 93C01218 2325B697 3C384CF1 D6FFDCC8 00000002 BFA13E8A",
            "D21053ED 0F62AB0E",
            "00:00:46.452: 450000B4 00080000 FF33B304 02020203 02020204 32040000 F672999C",
            "00000003 7D2E11B7 A0BA4110 CC62F91E D6FFDCC8 00000003 7236B930",
            "3240CA8C 9EBB44FF",
            "00:00:48.452: 450000B4 00090000 FF33B303 02020203 02020204 32040000 F672999C",
            "00000004 FB6C80D9 1AADF938 CDE57ABA D6FFDCC8 00000004 E10D8028",
            "6BBD748F 87F5E253",
            "00:00:50.452: 450000B4 000A0000 FF33B302 02020203 02020204 32040000 F672999C",
            "00000005 697C8D9D 35A8799A 2A67E97B D6FFDCC8 00000005 BC21669D",
            "98B29FFF F32670F6",
            "00:00:52.452: 450000B4 000B0000 FF33B301 02020203 02020204 32040000 F672999C",
            "00000006 CA18CBC4 0F387FE0 9095C27C D6FFDCC8 00000006 87A54811",
            "AE3A0517 F8AC4E64",
            "```"
        ]
    ],
    "ExtraInfo": "Use the **show monitor event-trace** command to display trace message information.The trace function is not locked while information is being displayed to the console, which means that new trace messages can accumulate in memory. If entries accumulate faster than they can be displayed, some messages can be lost. If this happens, the **show monitor event-trace** command will generate a message indicating that some messages might be lost; however, messages will continue to display on the console. If the number of lost messages is excessive, the **show monitor event-trace** command will stop displaying messages.Use the **bfd** keyword for the *component* argument to display trace messages relating to the BFD feature.Use the **cfd** keyword for the *component* argument to display trace messages relating to the crypto fault detection feature. This keyword displays the contents of the error trace buffers in an encryption data path.",
    "RelatedCmds": [
        {
            "cmd": " **monitor event-trace (EXEC)** ",
            "description": " Controls event trace functions for a specified Cisco IOS software subsystem component. "
        },
        {
            "cmd": " **monitor event-trace (global)** ",
            "description": " Configures event tracing for a specified Cisco IOS software subsystem component. "
        },
        {
            "cmd": " **monitor event-trace dump-traces** ",
            "description": " Saves trace messages for all event traces currently enabled on the networking device. "
        }
    ]
}