{
    "From": " Cisco IOS Configuration Fundamentals Command Reference",
    "PageTitle": "help",
    "FuncDef": [
        "To display a brief description of the help system, use the **help** command in any command mode. "
    ],
    "CLIs": [
        "help"
    ],
    "ParentView": [
        null
    ],
    "ParaDef": [
        {
            "Parameters": "No parameters.",
            "Info": "This commmand has no arguments or keywords."
        }
    ],
    "Examples": [
        [
            "In the following example, thehelp command is used to display a brief description of the help system:",
            "```",
            "Router# help",
            "```",
            "```",
            "```",
            "```",
            "Help may be requested at any point in a command by entering",
            "```",
            "```",
            "a question mark '?'. If nothing matches, the help list will",
            "```",
            "```",
            "be empty and you must backup until entering a '?' shows the",
            "```",
            "```",
            "available options.",
            "```",
            "```",
            "Two styles of help are provided:",
            "```",
            "```",
            "1. Full help is available when you are ready to enter a",
            "```",
            "```",
            "command argument (e.g. 'show ?') and describes each possible",
            "```",
            "```",
            "argument.",
            "```",
            "```",
            "2. Partial help is provided when an abbreviated argument is entered",
            "```",
            "```",
            "and you want to know what arguments match the input",
            "```",
            "```",
            "(e.g. 'show pr?'.)",
            "```",
            "```",
            "```",
            "The following example shows how to use word help to display all the privileged EXEC commands that begin with the letters \"co.\" The letters entered before the question mark are reprinted on the next command line to allow the user to continue entering the command.",
            "```",
            "Router# co?",
            "```",
            "```",
            "configure connect copy",
            "```",
            "```",
            "Router# co",
            "```",
            "```",
            "```",
            "The following example shows how to use command syntax help to display the next argument of a partially complete access-list command. One option is to add a wildcard mask. The <cr> symbol indicates that the other option is to press Enter to execute the command without adding any more keywords or arguments. The characters entered before the question mark are reprinted on the next command line to allow the user to continue entering the command or to execute that command as it is.",
            "```",
            "Router(config)# access-list 99 deny 131.108.134.234 ?",
            "```",
            "```",
            "A.B.C.D Mask of bits to ignore",
            "```",
            "```",
            "<cr>",
            "```",
            "```",
            "Router(config)# access-list 99 deny 131.108.134.234",
            "```"
        ]
    ],
    "ExtraInfo": "The **help** command provides a brief description of the context-sensitive help system, which functions as follows:•![](/c/dam/en/us/td/i/templates/blank.gif)To list all commands available for a particular command mode, enter a question mark (?) at the system prompt.•![](/c/dam/en/us/td/i/templates/blank.gif)To obtain a list of commands that begin with a particular character string, enter the abbreviated command entry immediately followed by a question mark (?). This form of help is called *word help*, because it lists only the keywords or arguments that begin with the abbreviation you entered.•![](/c/dam/en/us/td/i/templates/blank.gif)To list the keywords and arguments associated with a command, enter a question mark (?) in place of a keyword or argument on the command line. This form of help is called *command syntax help*, because it lists the keywords or arguments that apply based on the command, keywords, and arguments you have already entered.",
    "RelatedCmds": [
        {
            "cmd": " **full-help** ",
            "description": " Enables help for the full set of user-level commands for a line. "
        }
    ]
}