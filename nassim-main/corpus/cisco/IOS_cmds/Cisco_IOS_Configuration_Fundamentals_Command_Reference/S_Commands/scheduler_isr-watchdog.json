{
    "From": " Cisco IOS Configuration Fundamentals Command Reference",
    "PageTitle": "scheduler isr-watchdog",
    "FuncDef": [
        "To detect if an Interrupt Service Routine (ISR) is suspended or stalled and to schedule and manage a watchdog timeout on an ISR, use the **scheduler isr-watchdog** command in global configuration mode. To disable the configuration, use the **no** form of this command. "
    ],
    "CLIs": [
        "scheduler isr-watchdog",
        "no scheduler isr-watchdog"
    ],
    "ParentView": [
        null
    ],
    "ParaDef": [
        {
            "Parameters": "No parameters.",
            "Info": "This commmand has no arguments or keywords."
        }
    ],
    "Examples": [
        [
            "The following example shows how to detect if an ISR is suspended or stalled and to manage a watchdog timeout on an ISR:",
            "```",
            "Router> enable",
            "```",
            "```",
            "Router# configure terminal",
            "```",
            "```",
            "Router(config)# scheduler isr-watchdog",
            "```"
        ]
    ],
    "ExtraInfo": "The timer ISR checks the current context to avoid holding processes accountable for CPU time spent servicing interrupts during the process time slice, and vice versa for interrupt-level code accountability. However, at each timer tick, the timer ISR applies the full 4 milliseconds of CPU time to the current context. As a result, depending on when the timer tick occurs in relation to a context switch, you might see inaccuracies in CPU utilization accounting compared with the actual computation time because some or all of the tick is being applied to the wrong context.",
    "RelatedCmds": [
        {
            "cmd": " **scheduler max-sched-time** ",
            "description": " Configures the maximum time in milliseconds that a scheduler can run without flagging an error. "
        }
    ]
}