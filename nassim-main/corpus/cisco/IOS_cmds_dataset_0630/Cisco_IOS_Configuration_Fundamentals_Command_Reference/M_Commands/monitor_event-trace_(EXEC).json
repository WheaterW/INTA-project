{
    "From": " Cisco IOS Configuration Fundamentals Command Reference",
    "PageTitle": "monitor event-trace (EXEC)",
    "FuncDef": [
        "To monitor and control the event trace function for a specified Cisco IOS software subsystem component, use the **monitor event-trace** command in privileged EXEC mode. "
    ],
    "CLIs": [
        "monitor event-trace <component> { clear | continuous | disable | dump [ pretty ] | enable | one-shot }",
        "Cisco 10000 Series Routers",
        "monitor event-trace <component> { disable | dump | enable | size | stacktrace }",
        "Catalyst 6500 Series Switches and Cisco 7600 Series Routers",
        "monitor event-trace all-traces { continuous [ cancel ] | du [ merged ] [ pretty ] }",
        "monitor event-trace l3 { clear | continuous [ cancel ] | disable | dump [ pretty ] | enable | interface <type mod>/<port> | one-shot }",
        "monitor event-trace spa { clear | continuous [ cancel ] | disable | dump [ pretty ] | enable | one-shot }",
        "monitor event-trace subsys { clear | continuous [ cancel ] | disable | dump [ pretty ] | enable | one-shot }"
    ],
    "ParentView": [
        null
    ],
    "ParaDef": [
        {
            "Parameters": " *component* ",
            "Info": " Name of the Cisco IOS software subsystem component that is the subject of the event trace. To get a list of components that support event tracing, use the **monitor event-trace ?** command. "
        },
        {
            "Parameters": " **all-traces** ",
            "Info": " Displays the configured merged-event traces. "
        },
        {
            "Parameters": " **merged** ",
            "Info": " (Optional) Dumps the entries in all event traces sorted by time. "
        },
        {
            "Parameters": " **l3** ",
            "Info": " Displays information about the Layer 3 trace. "
        },
        {
            "Parameters": " **spa** ",
            "Info": " Displays information about the Shared Port Adapter (SPA) trace. "
        },
        {
            "Parameters": " **interface** *type mod*/*port* ",
            "Info": " Specifies the interface to be logged. "
        },
        {
            "Parameters": " **cancel** ",
            "Info": " (Optional) Cancels the continuous display of latest trace entries. "
        },
        {
            "Parameters": " **subsys** ",
            "Info": " Displays information about the subsystem's initial trace. "
        }
    ],
    "Examples": [
        [
            "The following example shows the privileged EXEC commands to stop event tracing, clear the current contents of memory, and reenable the trace function for the interprocess communication (IPC) <component>. This example assumes that the tracing function is configured and enabled on the networking device.",
            "```",
            "Router# monitor event-trace ipc disable",
            "```",
            "```",
            "Router# monitor event-trace ipc clear",
            "```",
            "```",
            "Router# monitor event-trace ipc enable",
            "```",
            "```",
            "```",
            "The following example shows how the monitor event-trace one-shot command accomplishes the same function as the previous example except in one command. In this example, once the size of the trace message file has been exceeded, the trace is terminated.",
            "```",
            "Router# monitor event-trace ipc one-shot",
            "```",
            "```",
            "```",
            "The following example shows the command for writing trace messages for an event in binary format. In this example, the trace messages for the IPC <component> are written to a file.",
            "```",
            "Router# monitor event-trace ipc dump",
            "```",
            "```",
            "```",
            "The following example shows the command for writing trace messages for an event in ASCII format. In this example, the trace messages for the MBUS <component> are written to a file.",
            "```",
            "Router# monitor event-trace mbus dump pretty",
            "```",
            "Catalyst 6500 Series Switches and Cisco 7600 Series Routers Examples Only"
        ],
        [
            "```",
            "Router# monitor event-trace spa disable",
            "```",
            "```",
            "Router# monitor event-trace spa clear",
            "```",
            "```",
            "Router# monitor event-trace spa enable",
            "```"
        ]
    ],
    "ExtraInfo": "Use the **monitor event-trace** command to control what, when, and how event trace data is collected. Use this command after you have configured the event trace functionality on the networking device using the **monitor event-trace** command in global configuration mode.![](/c/dam/en/us/td/i/templates/note.gif)---**Note** ![](/c/dam/en/us/td/i/templates/blank.gif)The amount of data collected from the trace depends on the trace message size configured using the **monitor event-trace** command in global configuration mode for each instance of a trace.---The Cisco IOS software allows for the subsystem components to define whether support for event tracing is enabled or disabled at boot time. You can enable or disable event tracing in two ways: using the **monitor event-trace** command in privileged EXEC mode or using the **monitor event-trace** command in global configuration mode. To disable event tracing, you would enter either of these commands with the disable keyword. To enable event tracing again, you would enter either of these commands with the enable keyword.To determine whether you can enable event tracing on a subsystem, use the **monitor event-traceÂ ?** commandto get a list of software components that support event tracing. To determine whether event tracing is enabled by default for the subsystem, use the **show monitor event-trace** command to display trace messages.Use the **show monitor event-trace** command to display trace messages. Use the **monitor event-trace** *component* **dump** command to save trace message information for a single event. By default, trace information is saved in binary format. If you want to save trace messages in ASCII format, possibly for additional application processing, use the**monitor event-trace** *component* **dump** **pretty** command.To write the trace messages for all events currently enabled on a networking device to a file, enter the **monitor event-trace dump** command.To configure the file where you want to save trace information, use the **monitor event-trace** command in global configuration mode. The trace messages are saved in a binary format.",
    "RelatedCmds": [
        {
            "cmd": " **monitor event-trace** **(global)** ",
            "description": " Configures event tracing for a specified Cisco IOS software subsystem component. "
        },
        {
            "cmd": " **monitor event-trace dump-traces** ",
            "description": " Saves trace messages for all event traces currently enabled on the networking device. "
        },
        {
            "cmd": " **show monitor event-trace** ",
            "description": " Displays event trace messages for Cisco IOS software subsystem components. "
        }
    ]
}